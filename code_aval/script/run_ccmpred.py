#! /usr/bin/env python3
# -*- coding: utf-8 -*-

"""
    Usage:
        ./run_ccmpred.py [--folder PATH]

    Arguments:
        -f PATH, --folder PATH      Path to the folder containing multiple alignment files
                                    (fasta format) [default: data/aln/fasta]
"""

# Third-party modules
import os
import subprocess
from datetime import datetime
from docopt import docopt
from conkit.applications import CCMpredCommandline


def convert_aln_file(aln_file, aln_file_clustal):
    """
        Convert a multiple alignment file from fasta to clustal.
        The first sequence of this multiple alignment is kept and
        a list of non-gaps position index of this sequence is then generated.

        Args:
            aln_file (str): Multiple alignement file (fasta format).
            aln_file_clustal (str): Multiple alignemnt file (clustal format) to generated.

        Returns:
            list: List of indexes corresponding to amino acids positions in aln file.
    """
    os.makedirs(os.path.dirname(aln_file_clustal), exist_ok=True)
    # Convertion from fasta to clustal
    convert = subprocess.Popen(
        ["./bin/CCMpred/scripts/convert_alignment.py", aln_file,
         "fasta", aln_file_clustal], stdout=subprocess.PIPE).communicate()[0]

def generate_ccmpred_result(aln_file, ccmpred_output):
    """
        Extract N tops couplings based on co_evolution score. co_evolution score
        is calculated between two non-consecutive amino acids by CCMPRED tool based on
        MSA multiple alignment. Co_evolution score measures co-occurence of a pair of amino
        acids in ortholog sequences. Two amino acids have co-evoluated if the
        occurence of one of them never occur whithout the other.

        .. math::

          Nb\_top\_contacts = {length(query) \over 2}

        Args:
            aln_file (str): Multiple alignement file (clustal format).
            ccmpred_output (str): Path to the output file generated by ccmpred.
    """
    os.makedirs(os.path.dirname(ccmpred_output), exist_ok=True)
    # Run ccmpred : Prediction of contacts
    ccmpred_cline = CCMpredCommandline(
        cmd='./bin/CCMpred/bin/ccmpred', alnfile=aln_file, matfile=ccmpred_output)
    ccmpred_cline()

if __name__ == "__main__":

    START_TIME = datetime.now()

    ### Parse command line
    ######################
    ARGUMENTS = docopt(__doc__)

    # Path to the folder containing multiple alignment files (fasta format)
    FASTA_ALN_FOLDER = ARGUMENTS["--folder"]

    ALL_ALN_FILES = os.listdir(FASTA_ALN_FOLDER)

    for ALN_FILE in ALL_ALN_FILES:
        query = ALN_FILE.split(".")[0]
        # Paths
        ALN_FILE_CLUSTAL = "data/aln/clustal/" + query + ".clustal"
        CCMPRED_OUTPUT = "data/ccmpred/" + query + ".mat"
        if not os.path.isfile(CCMPRED_OUTPUT):
            print("Generation of .mat file by CCMPRED for the {} query.".format(query))
            # Convert multiple alignment file from fasta to clustal
            convert_aln_file(FASTA_ALN_FOLDER+"/"+ALN_FILE, ALN_FILE_CLUSTAL)
            generate_ccmpred_result(ALN_FILE_CLUSTAL, CCMPRED_OUTPUT)
        else:
            print("The .mat file of the query {} already exist.".format(query))

    print("\nTotal runtime: {} seconds".format(str(datetime.now() - START_TIME)))
